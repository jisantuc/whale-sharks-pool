name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up a PureScript toolchain
        uses: purescript-contrib/setup-purescript@main
        with:
          purescript: "0.14.4"

      - name: Cache PureScript dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-spago-${{ hashFiles('**/*.dhall') }}
          path: |
            .spago
            output

      - name: Set up Node toolchain
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install NPM dependencies
        run: npm install

      - name: Install dependencies
        run: spago install

      - name: Build source
        run: spago build --no-install --purs-args '--censor-lib --strict'

      - name: Run tests
        run: spago test --no-install

      - name: Bundle lambda function js code
        run: spago bundle-module -m Lambda -t index.backend.js

      - name: Create Lambda deployment package
        if: ${{ github.ref == 'refs/heads/main' }}
        run: mkdir -p dist && zip -r9 dist/package.zip indexBE.js ./node_modules

      - name: Setup terraform
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.7

      - name: Put AIRTABLE_KEY in tf vars file
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "airtable_key = \"${{ secrets.AIRTABLE_KEY }}\"" > deployment/tfvars

      - name: Deploy API
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          pushd deployment && \
            terraform init && \
            terraform plan -var-file=tfvars -out tfplan.out && \
            terraform apply -auto-approve tfplan.out
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build frontend for gh-pages deploy
        run: |
          npm run build-frontend

      - name: Push to gh-pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: public
